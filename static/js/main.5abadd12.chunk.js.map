{"version":3,"sources":["components/editor/page.js","redux/actions/reduxHandleChange.js","components/editor/index.js","components/header/index.js","components/previewer/page.js","components/previewer/index.js","redux/reducers/handleChangeReducer.js","redux/store.js","index.js"],"names":["Page","props","className","Badge","variant","Form","Control","as","value","text","onChange","ChangeText","id","rows","reduxHandleChange","payload","type","Editor","onChangeText","bind","event","this","target","input","Component","connect","state","handleChangeReducer","dispatch","Header","marked","require","setOptions","breaks","dangerouslySetInnerHTML","__html","Previewer","DEFAULT_STATE","reducer","combineReducers","store","createStore","App","Container","fluid","Row","md","Col","React","ReactDOM","render","document","getElementById"],"mappings":"qhCAoBeA,MAhBf,SAAcC,GACZ,OACE,kBAAC,WAAD,KACA,wBAAIC,UAAU,2BAA0B,kBAACC,EAAA,EAAD,CAAOC,QAAQ,QAAf,WACxC,kBAACC,EAAA,EAAD,KACA,kBAACA,EAAA,EAAKC,QAAN,CACAC,GAAG,WACHC,MAAOP,EAAMQ,KACbC,SAAUT,EAAMU,WAChBC,GAAK,SACLC,KAAK,U,OCLMC,EAPW,SAAAC,GACxB,MAAO,CACLC,KAJgB,OAKhBD,YCAEE,E,kDACJ,WAAYhB,GAAO,IAAD,8BAChB,cAAMA,IACDiB,aAAe,EAAKA,aAAaC,KAAlB,gBAFJ,E,yDAILC,GACXC,KAAKpB,MAAMU,WAAWS,EAAME,OAAOd,S,+BAGnC,OACE,kBAAC,EAAD,CACAC,KAAMY,KAAKpB,MAAMsB,MACjBZ,WAAcU,KAAKH,mB,GAZJM,aA6BNC,eAVS,SAAAC,GACtB,MAAO,CAACH,MAAOG,EAAMC,wBAGI,SAAAC,GACzB,MAAO,CACLjB,WAAY,SAAAF,GAAI,OAAImB,EAASd,EAAkBL,QAIpCgB,CAA6CR,GCvB7CY,G,MARA,WACb,OACE,4BAAQ3B,UAAU,yBAClB,qDCFA4B,G,MAASC,EAAQ,KACrBD,EAAOE,WAAW,CAChBC,QAAO,IAGT,IAaejC,EAbF,SAACC,GACZ,OACE,kBAAC,WAAD,KACA,wBAAIC,UAAU,2BAA0B,kBAACC,EAAA,EAAD,CAAOC,QAAQ,QAAf,cACxC,yBACA8B,wBAAyB,CAACC,OAAQL,EAAO7B,EAAMQ,OAC/CG,GAAK,UACLV,UAAY,cCZVkC,E,uKAEF,OACE,kBAAC,EAAD,CAAM3B,KAAQY,KAAKpB,MAAMsB,Y,GAHPC,aAYTC,eAJS,SAAAC,GACtB,MAAO,CAACH,MAAOG,EAAMC,uBAGRF,CAAyBW,G,QCdlCC,G,MAAgBN,EAAQ,KAWfJ,EATa,WAAiD,IAAhDD,EAA+C,uDAAvCW,EAAc5B,KAAyB,yCAAlBO,EAAkB,EAAlBA,KAAMD,EAAY,EAAZA,QAC9D,OAAQC,GACN,IAAK,OACH,OAAOD,EACT,QACE,OAAOW,ICNPY,EAAUC,YAAgB,CAC9BZ,wBAKaa,EAFDC,YAAYH,G,wBCOpBI,G,mLAEF,OACE,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CAAKD,GAAI,IAAI,kBAAC,EAAD,QAEf,kBAACD,EAAA,EAAD,CAAKC,GAAI,GACT,kBAACC,EAAA,EAAD,CAAKD,GAAI,GAAG,kBAAC,EAAD,OACZ,kBAACC,EAAA,EAAD,CAAKD,GAAI,GAAG,kBAAC,EAAD,a,GATFE,IAAMxB,YAiBxByB,IAASC,OACP,kBAAC,IAAD,CAAUV,MAASA,GACnB,kBAAC,EAAD,OAEAW,SAASC,eAAe,W","file":"static/js/main.5abadd12.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\nfunction Page(props){\r\n  return(\r\n    <Fragment>\r\n    <h2 className=\"text-center prev-header\"><Badge variant='dark'>Editor</Badge></h2>\r\n    <Form>\r\n    <Form.Control\r\n    as=\"textarea\"\r\n    value={props.text}\r\n    onChange={props.ChangeText}\r\n    id = \"editor\"\r\n    rows=\"15\"/>\r\n    </Form>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n","export const type = 'TEXT';\r\n\r\nconst reduxHandleChange = payload => {\r\n  return {\r\n    type,\r\n    payload\r\n  };\r\n}\r\n\r\nexport default reduxHandleChange;\r\n","import React, {Component} from 'react';\r\nimport Page from './page';\r\nimport { connect } from 'react-redux';\r\nimport reduxHandleChange from '../../redux/actions/reduxHandleChange';\r\n\r\nclass Editor extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n  }\r\n  onChangeText(event){\r\n    this.props.ChangeText(event.target.value);\r\n  }\r\n  render(){\r\n    return(\r\n      <Page\r\n      text={this.props.input}\r\n      ChangeText = {this.onChangeText}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n  return {input: state.handleChangeReducer};\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    ChangeText: text => dispatch(reduxHandleChange(text))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);\r\n","import React from 'react';\r\nimport './index.css';\r\n\r\nconst Header = () => {\r\n  return(\r\n    <header className=\"my-header text-center\">\r\n    <h1>Markdown Previewer</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, {Fragment} from 'react';\r\nimport './index.css';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\nlet marked = require(\"marked\");\r\nmarked.setOptions({\r\n  breaks:true\r\n});\r\n\r\nconst Page = (props) => {\r\n  return(\r\n    <Fragment>\r\n    <h2 className=\"text-center prev-header\"><Badge variant='dark'>Previewer</Badge></h2>\r\n    <div\r\n    dangerouslySetInnerHTML={{__html: marked(props.text)}}\r\n    id = \"preview\"\r\n    className = \"preview\"\r\n    ></div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n","import React, {Component} from 'react';\r\nimport Page from './page';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Previewer extends Component{\r\n  render(){\r\n    return(\r\n      <Page text = {this.props.input}/>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n  return {input: state.handleChangeReducer};\r\n}\r\n\r\nexport default connect(mapStateToProps)(Previewer);\r\n","import './initialText';\r\n\r\nconst DEFAULT_STATE = require('./initialText.json');\r\n\r\nconst handleChangeReducer = (state = DEFAULT_STATE.text, {type, payload}) =>{\r\n  switch (type) {\r\n    case 'TEXT':\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default handleChangeReducer;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport handleChangeReducer from './reducers/handleChangeReducer';\r\n\r\nconst reducer = combineReducers({\r\n  handleChangeReducer\r\n});\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Editor from './components/editor';\r\nimport Header from './components/header';\r\nimport Previewer from './components/previewer';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\n\r\n\r\nclass App extends React.Component{\r\n  render(){\r\n    return(\r\n      <Container fluid>\r\n        <Row md={4}>\r\n          <Col md={12}><Header/></Col>\r\n        </Row>\r\n        <Row md={4}>\r\n        <Col md={6}><Editor/></Col>\r\n        <Col md={6}><Previewer/></Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n  <App/>\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n"],"sourceRoot":""}